library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.STD_LOGIC_ARITH.ALL;
use IEEE.STD_LOGIC_UNSIGNED.ALL;

entity contador_2digitos is
    Port (
        clk : in STD_LOGIC;
        rst : in STD_LOGIC;
        anodos : out STD_LOGIC_VECTOR(1 downto 0);
        segmentos : out STD_LOGIC_VECTOR(6 downto 0)
    );
end contador_2digitos;

architecture Behavioral of contador_2digitos is
    signal unidades : STD_LOGIC_VECTOR(3 downto 0) := "0000";
    signal decenas : STD_LOGIC_VECTOR(3 downto 0) := "0000";
    signal anodo_sel : STD_LOGIC_VECTOR(1 downto 0) := "11";
    signal display_data : STD_LOGIC_VECTOR(6 downto 0);

begin
    process(clk, rst)
    begin
        if rst = '1' then
            unidades <= "0000";
            decenas <= "0000";
        elsif rising_edge(clk) then
            if unidades = "1001" then
                unidades <= "0000";
                if decenas = "1001" then
                    decenas <= "0000";
                else
                    decenas <= decenas + 1;
                end if;
            else
                unidades <= unidades + 1;
            end if;
        end if;
    end process;

    display_process: process(unidades, decenas)
    begin
        case decenas is
            when "0000" => display_data <= "00111111"; -- 0
            when "0001" => display_data <= "00000110"; -- 1
            when "0010" => display_data <= "01011011"; -- 2
            when "0011" => display_data <= "01001111"; -- 3
            when "0100" => display_data <= "01100110"; -- 4
            when "0101" => display_data <= "01101101"; -- 5
            when "0110" => display_data <= "01111101"; -- 6
            when "0111" => display_data <= "00000111"; -- 7
            when "1000" => display_data <= "01111111"; -- 8
            when others => display_data <= "01101111";   -- 9
        end case;

        case unidades is
            when "0000" => display_data <= display_data or "11111100"; -- Agregar el punto para unidades
            when others => display_data <= display_data or "11111111"; -- Apagar el punto
        end case;
    end process;

    anodos <= anodo_sel;
    segmentos <= display_data;
end Behavioral;
